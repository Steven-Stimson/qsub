#!/usr/bin/env perl
use strict;
use warnings;
use Getopt::Long;
use Cwd 'abs_path';
use File::Basename;
use Pod::Usage;


=head1 NAME

qsub	a tool to simplify "cds task run" command

=head1 USAGE

qsub -t <threads> -vf <memory> [-gpu L4] [-p] -i <image> <script.sh>
please modify image_url.list

=head1 OPTIONS

=item B<-t>	threads |default: 1

=item B<-vf>	memory  |default: 4

=item B<-gpu>	gpu	| [L4]

=item B<-p>	parallel

=item B<-i>	image   |default: miniconda

=item B<-s>	show command

=item B<-h | -help | --help>	help message
=cut


my($num_proc, $vf, $gpu, $resource, $parallel, $image, $show, $help);

GetOptions(
	"t:i"	=>	\$num_proc,
	"vf:i"	=>	\$vf,
	"i:s"	=>	\$image,
	"gpu:s"	=>	\$gpu,
	"p"	=>	\$parallel,
	"s"	=>	\$show,
	"h|help|-help"	=>	\$help,
)or pod2usage(1);

$help && pod2usage(1);
@ARGV>1 || pod2usage(1);


$image = "miniconda";
$num_proc ||= 1;
$vf ||= 4;
if($gpu){
        $resource = "\"vf=${vf}g,num_proc=$num_proc,gpu=${gpu}\"";
}else{
	$resource = "\"vf=${vf}g,num_proc=$num_proc\"";
}

my %URL;
open IN,dirname($0)."/image_url.list";
while(<IN>){
	chomp;
	my ($image_name, $url) = split/\s+/;
	$URL{$image_name} = $url;
}
close IN;


my @scripts;
foreach my $file(@ARGV){
	next unless -f $file;
	push(@scripts, abs_path($file));
}
@scripts == 0 && die "error: please validate path of scripts!!!";



my $command;

if(@scripts>1){
	open PARASHELL,">parallel.sh";
	foreach my $script(@scripts){
		my $dir = dirname($script);
		$script = basename($script);
		print PARASHELL "cd $dir && sh $script\n";
	}
	close PARASHELL;
	my $parashell = abs_path("parallel.sh");
	$command = "dcs task run --type s -p $parashell -l $resource --image \"$URL{$image}\"\n"; 
}elsif(@scripts==1 && !$parallel){
	my $dir = dirname($scripts[0]);
	my $script = basename($scripts[0]);
	$command =  "dcs task run --type s -i \"cd $dir sh $script\" -l $resource --image \"$URL{$image}\"\n";
}elsif(@scripts==1 && $parallel){
	my $parashell = $scripts[0];
	$command =  "dcs task run --type s -p $parashell -l $resource --image \"$URL{$image}\"\n";
}

	$show ? print $command : `$command`;
